#
# This file contains expected test output data generated by PBBT.
#
---
suite: rex.core
tests:
- include: test/test_validate_pbbt.yaml
  output:
    suite: validating-utilities
    tests:
    - suite: anyval
      tests:
      - py: define-any-val
        stdout: ''
      - py: any-val-object
        stdout: |
          <object object at 0x7fef24301890>
    - suite: maybeval
      tests:
      - py: define-maybe-val
        stdout: ''
      - py: maybe-val-10
        stdout: |
          10
      - py: maybe-val-none-is-none
        stdout: |
          True
      - py: maybe-val-nan
        stdout: |
          Expected an integer
          Got:
              'NaN'
    - suite: oneofval
      tests:
      - py: define-oneof-val
        stdout: ''
      - py: oneof-val-1
        stdout: |
          True
      - py: oneof-val-10
        stdout: |
          10
      - py: oneof-val-nan
        stdout: |
          Failed to match the value against any of the following:
              Expected a Boolean value
              Got:
                  'NaN'

              Expected an integer
              Got:
                  'NaN'
    - suite: strval
      tests:
      - py: define-str-val-ssn-val
        stdout: ''
      - py: str-val-hello
        stdout: |
          'Hello'
      - py: str-val-u-hello
        stdout: |
          'Hello'
      - py: str-val-u-n-cyrillic-capital-letter-ya
        stdout: |
          '\xd0\xaf'
      - py: str-val-u-n-cyrillic-capital-letter-ya-.encode-utf-8
        stdout: |
          '\xd0\xaf'
      - py: str-val-u-n-cyrillic-capital-letter-ya-.encode-cp1251
        stdout: |
          Expected a valid UTF-8 string
          Got:
              '\xdf'
      - py: ssn-val-123-12-1234
        stdout: |
          '123-12-1234'
      - py: ssn-val-john-doe
        stdout: |
          Expected a string matching:
              /^\d\d\d-\d\d-\d\d\d\d$/
          Got:
              'John Doe'
    - suite: choiceval
      tests:
      - py: define-choice-val
        stdout: ''
      - py: choice-val-two
        stdout: |
          'two'
      - py: choice-val-u-two
        stdout: |
          'two'
      - py: choice-val-2
        stdout: |
          Expected a string
          Got:
              2
      - py: choice-val-five
        stdout: |
          Expected one of:
              one, two, three
          Got:
              'five'
    - suite: boolval
      tests:
      - py: define-bool-val
        stdout: ''
      - py: bool-val-false
        stdout: |
          False
      - py: bool-val-0
        stdout: |
          False
      - py: bool-val-0
        stdout: |
          False
      - py: bool-val-false
        stdout: |
          False
      - py: bool-val-true
        stdout: |
          True
      - py: bool-val-1
        stdout: |
          True
      - py: bool-val-1
        stdout: |
          True
      - py: bool-val-true
        stdout: |
          True
      - py: bool-val-none
        stdout: |
          Expected a Boolean value
          Got:
              None
    - suite: intval-pintval-uintval
      tests:
      - py: define-int-val-int-1to10val-etc
        stdout: ''
      - py: int-val-10
        stdout: |
          10
      - py: int-val-10l
        stdout: |
          10L
      - py: int-val-10
        stdout: |
          10
      - py: int-val-nan
        stdout: |
          Expected an integer
          Got:
              'NaN'
      - py: int-val-none
        stdout: |
          Expected an integer
          Got:
              None
      - py: int-1to10-val-1
        stdout: |
          1
      - py: int-1to10-val-5
        stdout: |
          5
      - py: int-1to10-val-10
        stdout: |
          10
      - py: int-1to10-val-0
        stdout: |
          Expected an integer in range:
              [1..10]
          Got:
              0
      - py: int-1to10-val-11
        stdout: |
          Expected an integer in range:
              [1..10]
          Got:
              11
      - py: int-1to-val-1
        stdout: |
          1
      - py: int-1to-val-0
        stdout: |
          Expected an integer in range:
              [1..]
          Got:
              0
      - py: int-to10-val-10
        stdout: |
          10
      - py: int-to10-val-11
        stdout: |
          Expected an integer in range:
              [..10]
          Got:
              11
      - py: pint-val-1
        stdout: |
          1
      - py: pint-val-0
        stdout: |
          Expected an integer in range:
              [1..]
          Got:
              0
      - py: uint-val-0
        stdout: |
          0
      - py: uint-val-1
        stdout: |
          Expected an integer in range:
              [0..]
          Got:
              -1
    - suite: seqval
      tests:
      - py: define-seq-val-int-seq-val
        stdout: ''
      - py: seq-val-0-false-none
        stdout: |
          [0, False, None]
      - py: seq-val-none
        stdout: |
          Expected a sequence
          Got:
              None
      - py: int-seq-val
        stdout: |
          []
      - py: int-seq-val-1-2-3
        stdout: |
          [1, 2, 3]
      - py: int-seq-val-1-2-three
        stdout: |
          Expected an integer
          Got:
              'three'
          While validating sequence item
              #3
    - suite: mapval
      tests:
      - py: define-map-val-i2b-map-val-pi2b-map-val-i2i-map-val
        stdout: ''
      - py: map-val-0-false
        stdout: |
          {'0': 'false'}
      - py: map-val-none
        stdout: |
          Expected a mapping
          Got:
              None
      - py: i2b-map-val
        stdout: |
          {}
      - py: i2b-map-val-0-false
        stdout: |
          {0: False}
      - py: pi2b-map-val-0-false
        stdout: |
          Expected an integer in range:
              [1..]
          Got:
              '0'
          While validating mapping key:
              '0'
      - py: i2i-map-val-0-false
        stdout: |
          Expected an integer
          Got:
              'false'
          While validating mapping value for key:
              0
    - suite: fireval-directoryval
      tests:
      - py: define-file-val-dir-val
        stdout: ''
      - py: file-val-setup.py
        stdout: |
          'setup.py'
      - py: file-val-u-setup.py
        stdout: |
          'setup.py'
      - py: file-val-missing
        stdout: |
          Cannot find file:
              missing
      - py: file-val-src
        stdout: |
          Cannot find file:
              src
      - py: file-val-none
        stdout: |
          Expected a string
          Got:
              None
      - py: dir-val-src
        stdout: |
          'src'
      - py: dir-val-u-src
        stdout: |
          'src'
      - py: dir-val-missing
        stdout: |
          Cannot find directory:
              missing
      - py: dir-val-setup.py
        stdout: |
          Cannot find directory:
              setup.py
      - py: dir-val-none
        stdout: |
          Expected a string
          Got:
              None
