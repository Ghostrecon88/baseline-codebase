#
# Copyright (c) 2013, Prometheus Research, LLC
#

title: REX.CTL
tests:


# Setup a sandbox for `rex` invocations.
- rmdir: ./sandbox
- mkdir: ./sandbox
#- sh: ln -s ../test/rex-helper ./sandbox/rex

- coverage: setup.cfg

- sh: pip install -q -e ./demo

# Drop the demo database (if exists).
- rex: dropdb rex.ctl_demo
  ignore: true

#
# python -m rex.ctl
#

- title: python -m rex.ctl
  tests:
  - py: |
      # Simulate `python -m rex.ctl` invocation
      import sys
      old_argv = sys.argv
      sys.argv = ['__main__.py']
      try:
          import rex.ctl.__main__
      except SystemExit:
          pass
      sys.argv = old_argv
      # Save coverage trace.
      if '__coverage__' in __pbbt__:
          __pbbt__['__coverage__'].stop()
          __pbbt__['__coverage__'].save()


#
# rex help
#

- title: rex help
  tests:
  - rex: ''
  - rex: help createdb
  - rex: help dropdb
  - rex: help loaddb
  - rex: help dumpdb
  - rex: help deploy
  - rex: help shell
  - rex: help query
  - rex: help graphdb
  - rex: help serve
  - rex: help wsgi
  - rex: help serve-uwsgi
  - rex: help start
  - rex: help stop
  - rex: help status
  - rex: help packages
  - rex: help settings
  - rex: help http-host
  - rex: help http-port
  - rex: help project
  - rex: help requirements
  - rex: help parameters
  - rex: help uwsgi


#
# rex createdb, etc
#

- title: rex createdb, etc
  tests:
  - rex: createdb rex.ctl_demo
  - rex: dumpdb rex.ctl_demo -o ctl_demo.sql
  - rex: dropdb rex.ctl_demo
  - rex: loaddb rex.ctl_demo -i ctl_demo.sql
  - rex: dropdb rex.ctl_demo
  - rex: createdb --quiet rex.ctl_demo
  - rex: dumpdb --quiet rex.ctl_demo -o ctl_demo.sql
  - rex: dropdb --quiet rex.ctl_demo


#
# rex deploy
#

- title: rex deploy
  tests:
  - rex: deploy rex.ctl_demo
  - rex: deploy --quiet rex.ctl_demo


#
# rex shell
#

- title: rex shell
  tests:
  - rex: shell rex.ctl_demo
    stdin: |
        describe

#
# rex query
#

- title: rex query
  tests:
  - rex: query rex.ctl_demo
    stdin: |
        count(school)
  - rex: query rex.ctl_demo -o -
    stdin: |
        count(school)
  - rex: query rex.ctl_demo -o - -f json
    stdin: |
        count(school)
  - rex: query rex.ctl_demo -i ../demo/static/db/num_schools.htsql -o -
  - rex: query rex.ctl_demo -i rex.ctl_demo:/db/num_schools.htsql -o -
  - rex: query rex.ctl_demo
    stdin: |
        count(study)
    exit: 1

#
# rex graphdb
#

- title: rex graphdb
  tests:
  - rex: graphdb rex.ctl_demo
  - rex: graphdb rex.ctl_demo -o ctl_demo.dot -f dot

#
# rex serve
#

- title: rex serve
  tests:

  - title: Run with no project
    tests:
    - rex: serve
      exit: 1

  - title: Run with a project
    tests:
    - rex: serve rex.ctl_demo
      exit: null
    - get: /
      ignore: &http-ignore |
        ^Date:.(.*)$ |
        ^Server:.(.*)$ |
        ^Last-Modified:.(.*)$ |
        \[(\d\d\d\d)-(\d\d)-(\d\d).(\d\d):(\d\d):(\d\d)\.(\d+)\] |
        Traceback.\(most.recent.call.last\): ((?:[\n][ ]+.+)+)
    - rex: serve rex.ctl_demo
      ignore: &log-ignore |
        \[(\d\d)/(\w\w\w)/(\d\d\d\d).(\d\d):(\d\d):(\d\d)\] |
        \[(\d\d\d\d)-(\d\d)-(\d\d).(\d\d):(\d\d):(\d\d)\.(\d+)\] |
        [ ](\d+)$ |
        Traceback.\(most.recent.call.last\): ((?:[\n][ ]+.+)+)

  - title: Using `--require` option
    tests:
    - rex: serve rex.ctl_demo --require ../test/data/shared/
      exit: null
    - get: /
      ignore: *http-ignore
    - get: /shared/shared.css
      ignore: *http-ignore
    - rex: serve rex.ctl_demo --require ../test/data/shared/
      ignore: *log-ignore

  - title: Using `--set` option
    tests:
    - rex: serve rex.ctl_demo --set hello_access=anybody
      exit: null
    - get: /hello
      ignore: *http-ignore
    - rex: serve rex.ctl_demo --set hello_access=anybody
      ignore: *log-ignore

  - title: Invalid requirement or parameter
    tests:
    - rex: serve rex.ctl_demo --require unknown-package
      exit: 1
    - rex: serve rex.ctl_demo --set unknown-parameter=true
      exit: 1

  - title: Server address with `--http-host` and `--http-port`
    tests:
    - rex: --http-host=localhost --http-port=8088 serve rex.ctl_demo
      exit: null
    - get: http://localhost:8088/
      ignore: *http-ignore
    - rex: --http-host=localhost --http-port=8088 serve rex.ctl_demo
      ignore: *log-ignore

  - title: Server address with `--host` and `--port`
    tests:
    - rex: --http-host=localhost --http-port=8088 serve rex.ctl_demo -h 127.0.0.1 -p 8080
      exit: null
    - get: /
      ignore: *http-ignore
    - rex: --http-host=localhost --http-port=8088 serve rex.ctl_demo -h 127.0.0.1 -p 8080
      ignore: *log-ignore

  - title: Invalid `--http-host` and `--http-port`
    tests:
    - write: ./sandbox/rex.yaml
      data: 'http-host: true'
    - rex: serve rex.ctl_demo
      exit: 1
    - write: ./sandbox/rex.yaml
      data: 'http-host: 256.56.6.0'
    - rex: serve rex.ctl_demo
      exit: 1
    - write: ./sandbox/rex.yaml
      data: 'http-port: -1'
    - rex: serve rex.ctl_demo
      exit: 1
    - write: ./sandbox/rex.yaml
      data: 'http-port: localhost'
    - rex: serve rex.ctl_demo
      exit: 1
    - write: ./sandbox/rex.yaml
      data: 'http-port: 15.31'
    - rex: serve rex.ctl_demo
      exit: 1
    - rm: ./sandbox/rex.yaml

  - title: Using `--remote-user`
    tests:
    - rex: serve rex.ctl_demo --remote-user=Aladdin
      exit: null
    - get: http://localhost:8080/
      ignore: *http-ignore
    - rex: serve rex.ctl_demo --remote-user=Aladdin
      ignore: *log-ignore

  - title: Unhandled exceptions
    tests:
    - rex: serve rex.ctl_demo
      exit: null
    - get: /
      ignore: *http-ignore
    - get: /error
      ignore: *http-ignore
      expect: 500
    - rex: serve rex.ctl_demo
      ignore: *log-ignore

  - title: Unhandled exceptions with `--debug`
    tests:
    - rex: serve rex.ctl_demo --debug
      exit: null
    - get: /
      ignore: *http-ignore
    - get: /error
      ignore: *http-ignore
      expect: 500
    - rex: serve rex.ctl_demo --debug
      ignore: *log-ignore

  - title: Handling invalid requests
    tests:
    - rex: serve rex.ctl_demo --debug
      exit: null
    - get: '/invalid /request'
      ignore: *http-ignore
    - rex: serve rex.ctl_demo --debug
      ignore: *log-ignore

  - title: Using `--quiet` option
    tests:
    - rex: serve rex.ctl_demo --quiet
      exit: null
    - get: /
      ignore: *http-ignore
    - get: /error
      ignore: *http-ignore
      expect: 500
    - rex: serve rex.ctl_demo --quiet
      ignore: *log-ignore


#
# rex wsgi
#

- title: rex wsgi
  tests:

  - title: Requirements and parameters
    tests:
    - rex: wsgi
      exit: 1
    - rex: wsgi rex.ctl_demo
    - rex: wsgi rex.ctl_demo --require ../test/data/shared/
    - rex: wsgi rex.ctl_demo --set hello_access=anybody
    - rex: wsgi rex.ctl_demo --require unknown-package
      exit: 1
    - rex: wsgi rex.ctl_demo --set unknown-parameter=true
      exit: 1

  - title: Using `--output` option
    tests:
    - rex: wsgi rex.ctl_demo -o ctl_demo.wsgi
    - read: ./sandbox/ctl_demo.wsgi
    - rm: ./sandbox/ctl_demo.wsgi


#
# rex serve-uwsgi
#

- title: rex serve-uwsgi
  tests:

  - title: Missing configuration
    tests:
    - rex: serve-uwsgi rex.ctl_demo
      exit: 1

  - title: Running uWSGI
    tests:
    - rex: serve-uwsgi rex.ctl_demo --set-uwsgi version
      ignore: true
    - rex: serve-uwsgi rex.ctl_demo --uwsgi version
      ignore: true


#
# rex start/stop
#

- title: rex start/stop
  tests:

  - title: Missing configuration
    tests:
    - rex: start rex.ctl_demo
      exit: 1

  - title: Starting and stopping uWSGI daemon
    tests:
    - rex: start rex.ctl_demo --set-uwsgi http-socket=:8080
      ignore: &logto-ignore |
          logto: (\w+).log
    - rex: start rex.ctl_demo --set-uwsgi http-socket=:8080
      exit: 1
    - rex: status rex.ctl_demo
    - rex: status rex.ctl_demo --pid
      ignore: true
    - rex: status rex.ctl_demo --log
      ignore: true
    - rex: stop rex.ctl_demo
      ignore: *logto-ignore
    - rex: stop rex.ctl_demo
      exit: 1
    - rex: status rex.ctl_demo


#
# rex packages
#

- title: rex packages
  tests:

  - title: Run with no project
    tests:
    - rex: packages
      ignore: &ignore-packages |
        ^Version: \s+ (\d+\.\d+\.\d+)$ |
        ^(?:Location|Resources): \s+ /(.+)$ |
        ^Summary: \s+ (.*)$ |
        ^Dependencies: ((?:[\n]+[ ]+.+)+)

  - title: Run with a project
    tests:
    - rex: packages --project rex.ctl_demo
      ignore: *ignore-packages
    - rex: packages --requirements rex.ctl_demo
      ignore: *ignore-packages
    - rex: packages --requirements '["rex.ctl_demo"]'
      ignore: *ignore-packages

  - title: Module and static requirements
    tests:
    - rex: packages --requirements rex.core.application
      ignore: *ignore-packages
    - rex: packages --requirements ../test/data/shared/
      ignore: *ignore-packages

  - title: Ill-formed requirements
    tests:
    - rex: packages --project rex.unknown
      exit: 1
    - write: ./sandbox/rex.yaml
      data: 'project: true'
    - rex: packages
      exit: 1
    - write: ./sandbox/rex.yaml
      data: 'requirements: [true]'
    - rex: packages
      exit: 1
    - rm: ./sandbox/rex.yaml


#
# rex settings
#

- title: rex settings
  tests:

  - title: Run with no project
    tests:
    - rex: settings
      ignore: &ignore-settings |
        ^Description: ((?:[\n]+[ ]+.+)+)

  - title: Run with a project and parameters
    tests:
    - rex: settings --project rex.ctl_demo
      ignore: *ignore-settings
    - rex: settings --project rex.ctl_demo
            --parameters 'debug hello_access=anybody'
      ignore: *ignore-settings
    - rex: settings --project rex.ctl_demo
            --parameters '{"debug":true,"hello_access":"anybody"}'
      ignore: *ignore-settings

  - title: Ill-formed parameters
    tests:
    - rex: settings --project rex.unknown
      exit: 1
    - rex: settings --project ../test/data/ill_formed_setting/
      ignore: *ignore-settings
    - rex: settings --project ../test/data/broken_setting/
      ignore: *ignore-settings
    - write: ./sandbox/rex.yaml
      data: 'parameters: [true]'
    - rex: settings
      exit: 1
    - rm: ./sandbox/rex.yaml


- sh: pip uninstall -q -y rex.ctl_demo

- py: |
    # Load accumulated coverage data
    if '__coverage__' in __pbbt__:
        __pbbt__['__coverage__'].load()

# Unable to measure coverage since many commands do `exec`.
#- coverage-check: 95.0
- coverage-report: ./build/coverage

- rmdir: sandbox


