@import "~bootstrap/less/bootstrap";
@import "~react-autocomplete/lib/styles.css";

/**
 * Variables
 */

// this is tweak for bootstrap to correctly resolve paths to glyphicon
@icon-font-path:            "~bootstrap/fonts/";
@images-path:               "~/images/";

@border-radius-base:        2px;
@border-radius-large:       2px;
@border-radius-small:       2px;

@padding:                   0.5em;
@headHeight:                47px;
@sideBarWidth:              400px;
@headColor:                 #e0e0e0;
@fieldsHeadHeight:          3.5em;
@channelsHeadColor:         #e0e0e0;
@channelsHeadHeight:        43px;
@channelFormHeadHeight:     45px;
@handleImage:               url("images/dragarea.png");
@viewSourcePadding:         2*@padding;

@color-danger:              rgb(255, 237, 237);
@color-success:             #E2FAE2;
@color-hover-highlight:     #e6e6e6;
@color-passive-highlight:   #fafafa;

/**
 * Bootstrap overrides
 */

label {
  .rfb-control-text;
  padding-top: @padding;
}
textarea {
  min-height: 70px;
  resize: vertical;
}

textarea,
select,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"] {
  .form-control();
  .input-sm();
}

/**
 * Utilities
 */

.glyphicon-refresh-animate {
  -animation: spin .7s infinite linear;
  -webkit-animation: spin2 .7s infinite linear;
}

@-webkit-keyframes spin2 {

  from {
    -webkit-transform: rotate(0deg);
  }

  to {
    -webkit-transform: rotate(360deg);
  }
}

@keyframes spin {

  from {
    transform: scale(1) rotate(0deg);
  }

  to {
    transform: scale(1) rotate(360deg);
  }
}

.rfb-empty-text {
  color: #808080;
  font-style: italic;
}

.rfb-control-text {
  color: @gray-light;
  font-size: 95%;
  font-weight: bold;

  .glyphicon {
    font-size: 90%;
  }
}

.btn-plain {
  .btn-link;
  color: #cccccc;
  &:hover {
    text-decoration: none;
  }
}

.btn-quiet {
  border: none;
  background: transparent;
  &:hover {
    .btn-default;
  }
}

.btn-xxs {
  .btn-xs;
  font-size: 75%;
}

.area(@top:auto, @bottom:auto, @left:auto, @right:auto,
      @width:auto, @height:auto,
      @bgColor:transparent, @areaPadding:@padding, @position:absolute) {
  position: @position;
  top: @top;
  bottom: @bottom;
  left: @left;
  right: @right;
  width: @width;
  height: @height;
  background-color: @bgColor;
  padding: @areaPadding;
}

.rfb-area {
  background-color: white;
}

.rfb-centered {
  position: absolute;
  left: 50%;
  top: 50%;
  > div {
    position: relative;
    left: -50%;
    top: -50%;
  }
}

/**
 * Enumerations
 */

.rfb-EnumerationCollectionFieldset__add {
  .btn-sm();
  margin: @padding/2 @padding;
}

.rfb-enumeration {
  .clearfix();
  position: relative;
}

.rfb-enumeration__identifier {
  .pull-left();
  .rf-Field();
  width: 180px;
}

.rfb-enumeration__description {
  .pull-left();
  width: 180px;

  .rf-Field {
    padding-left: 0px !important;
  }
}

.rfb-enumeration__emptyText {
  color: @gray-lighter;
}

.rfb-enumeration__close {
  position: absolute;
  top: 7px;
  right: @padding;
  .btn;
  .btn-plain;
  padding: 0;
}

/**
 * <LocalizedString />
 */

.rf-LocalizedString__label {
  .rf-Field__label();
}
.rfb-LocalizedString__control {
  white-space: nowrap;
}
.rfb-LocalizedString__select {
  display: inline-block;

  .rfb-Select {
    border-top-right-radius: 0px;
    border-bottom-right-radius: 0px;
  }
}
.rfb-LocalizedString__element {
  display: inline-block;
  padding: 0px !important;

  input[type=text] {
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
  }
}

.rfb-LocalizedString--multiline {

  .rfb-LocalizedString__select {
    display: block;
  }

  .rfb-Select {
    width: auto;
    border-top-right-radius: 2px;
    border-bottom-right-radius: 0px;
    border-bottom-left-radius: 2px;
  }

  .rfb-LocalizedString__element {
    display: block;
  }

  textarea {
    border-top-left-radius: 0px;
  }
}

/**
 * <Editor />
 */

.rfb-Editor {
  .rfb-area();
}


.rfb-Editor__return {
  margin-right: 5px;
}

.rfb-Editor__tools {
  .area(0, 0, 0, 0);
}

.rfb-Editor__instrument {
  .area(0, 0, 0, 0, @width: 400px, @bgColor: #fafafa);
  overflow: hidden;
}

.rfb-Editor__headActions {
  display: inline-block;
}

.rfb-Editor__publish {
  margin-left: @padding;
}

.rfb-Editor__undoRedo {
  margin-left: @padding;
  margin-right: @padding;
}

.rfb-Editor__channel {
  position: absolute;
  top: 47px;
  bottom: 0px;
  left: 400px;
  right: 0px;
  width: auto;
  height: auto;
  background-color: transparent;
  padding: 0.5em;
  overflow-x: hidden;
  overflow-y: auto;
}

.rfb-Editor__head {
  .area(0px, auto, 400px, 0px, auto, @headHeight, @headColor);
  z-index: 1;
  text-align: right;
}

.rfb-Editor--loading .rfb-Editor__workarea {
  display: none;
}

/**
 * <Channel />
 */

.rfb-Channel {
  .area(@channelsHeadHeight + 1, 0, 0, 0);
  border-left: 1px solid #e0e0e0;
  overflow-y: auto;
  overflow-x: hidden;
}

.rfb-Channel__title,
.rfb-Channel__defaultLocalization {
  display: inline-block;
  white-space: nowrap;
  > * {
    width: auto;
    display: inline-block;
  }
}

.rfb-Channel__defaultLocalization {
  padding-left: 0px !important;
}

.rfb-Channels__pages {
  .area(40px, 0px, 0px, 0px);
  position: absolute !important;
  overflow: hidden;

  > .rfb-SortableRepeatingFieldset
  > .rfb-SortableRepeatingFieldset__fieldset
  > .rf-RepeatingFieldset__items {
    padding-top: 0px !important;
    .area(30px, 0px, 0px, 0px);
    overflow-x: hidden;
    overflow-y: auto;
  }
}

/**
 * <ChannelTabs />
 */

.rfb-ChannelTabs {
  .area(1px, auto, 0, 0px, auto, @channelsHeadHeight, @channelsHeadColor);
}

.rfb-ChannelTabs__tabs {
  .area(auto, 0px, 10px, auto, auto, auto, transparent, 0px);
  overflow: hidden;
}

.rfb-ChannelTabs__tab {
  display: inline-block;
  margin-left: 10px;
  vertical-align: bottom;
  padding: @padding;
  border-top-left-radius: @border-radius-base;
  border-top-right-radius: @border-radius-base;
  outline: none;
  cursor: pointer;

  &:first-child {
    margin-left: 0px;
  }

  &.rfb-active {
    background-color: white;
    text-decoration: none;
    color: black;
  }
}

/**
 * <ViewSource />
 */

.rfb-ViewSource {
  .area(@viewSourcePadding, @viewSourcePadding, @viewSourcePadding, @viewSourcePadding, auto, auto, white);
  .well();
  border-color: #aaaaaa;
  margin-bottom: 0px;
  z-index: 100500;

  pre {
    .area(@padding, @padding, @padding, @padding, auto, auto, white);
    margin: 0px;
  }

  .rfb-ViewSource__buttons {
    .area(@viewSourcePadding, auto, auto, 2 * @viewSourcePadding);

    button {
      .btn();
      .btn-default();
      margin-left: @padding;
      &.rfb-active {
        .btn-primary();
      }
    }
  }
}

.rfb-add-question-for {
  display: inline-block;
  vertical-align: middle;

  .react-autocomplete-Autocomplete__search {
    .form-control();
    .input-sm();
  }
}

.rfb-tab-content {
  margin-left: 0px;
  padding-left: 0px;
  list-style-type: none;
  > li {
    display: none;
    padding: @padding;
    min-height: 30px;
    position: relative;
  }
  > li.active {
    display: block;
  }
}

.rfb-instrument-version {
  > * {
    min-height: 30px;
    line-height: 30px;
  }

  > *:last-child {
    text-align: right;
  }

  &:hover {
    background-color: #fafafa;
  }

  margin-bottom: @padding;
  padding: @padding;
}

.rfb-InfoMessage {
  position: absolute;
  left: 50%;
  top: 10px;
  > div {
    position: relative;
    left: -50%;

    .rfb-InfoMessage-text {
      padding: @padding 2*@padding;
      border-radius: 4px;

      &.rfb-InfoMessage-info {
        background-color: #d9edf7;
      }

      &.rfb-InfoMessage-warning {
        background-color: #fcf8e3;
      }

      &.rfb-InfoMessage-error {
        background-color: #f2dede;
      }
    }
  }
}

.rfb-new-instrument {
  .well();
  padding: @padding;
  .rf-Message {
    display: none;
  }
  > * {
    display: inline-block;
  }
  .rf-Field {
    display: inline-block;
    > .rf-Label, > input {
      display: inline-block;
      margin-right: @padding;
    }
  }
}

/**
 * <ReactForms.Field />
 */
.rf-Field {
  padding: @padding/2 @padding;
}
.rf-Field__label {
  margin-right: @padding;
}
.rf-Field.rf-Field--invalid {
  input, textarea {
    background: @color-danger;
    border-color: darken(@color-danger, 30%);
  }
  .rf-Label, .rf-Message {
    color: darken(@color-danger, 30%);
  }
}

/**
 * <ReactForms.Fieldset />
 */
.rf-Fieldset__label {
  padding: @padding/2 @padding;
}

/**
 * <ReactForms.RepeatingFieldset />
 */
.rf-RepeatingFieldset__label {
  padding: @padding/2 @padding;
}

/**
 * <ReactForms.Message />
 */

.rf-Message {
  font-size: 80%;
}

/**
 * <ReactForms.RepeatingFieldset />
 */

.rf-RepeatingFieldset__label {
  padding: 0;
}
.rf-RepeatingFieldset__item {
  position: relative;
}
.rf-RepeatingFieldset__remove {
  position: absolute;
  top: 0;
  right: @padding;
  .btn;
  .btn-plain;
  padding: 0;
}
.rf-RepeatingFieldset__child {
  padding-top: 22px;
}

/**
 * <SortableRepeatingFieldset />
 */

.rfb-SortableRepeatingFieldset {
  height: 100%;
  overflow: auto;
}
.rfb-SortableRepeatingFieldset__handle {
  /* .area(0px,auto,0px,0px); */
  background-image: @handleImage;
  margin: 4px 4px 0px 4px;
  height: 12px;
}
.rfb-SortableRepeatingFieldset__placeholder {
  height: 40px;
}
.rfb-SortableRepeatingFieldset__image {
  border: 1px solid red;
  background-color: green;
  padding: 20px;
}

/**
 * <InstrumentList />
 */
.rfb-InstrumentList {
  .rfb-area();
}

.rfb-InstrumentList__list {
  .area(0px, 0px, 0px, 0px);
  h1, h2 {
    margin-top: 0px;
  }
}

.rfb-InstrumentList__items {
  .container-fluid();

  .rfb-header {
    font-weight: bold;
  }
}

/**
 * <Instrument />
 */

.rfb-Instrument {
}

.rfb-Instrument__title {
  padding: 0px;
}

.rfb-Instrument__record.rfb-RepeatingFieldset {
  .area(80px, 0px, 0px, 0px);
  overflow: hidden;

  > .rfb-SortableRepeatingFieldset
  > .rfb-SortableRepeatingFieldset__fieldset
  > .rf-RepeatingFieldset__items {
    .area(30px, 0px, 0px, 0px);
    padding: 0px 5px;
    overflow-x: hidden;
    overflow-y: auto;
  }
}

/**
 * <RepeatingFieldset />
 */

.rfb-RepeatingFieldset {
  position: relative;
  padding: @padding;
}

.rfb-RepeatingFieldset__item {
  border: 1px solid @btn-default-border;
  border-radius: @border-radius-small;
  margin-bottom: @padding;

  &:last-child {
    margin-bottom: 0;
  }
}

.rfb-RepeatingFieldset__bottomButton {
  .btn;
  .btn-quiet;
  .rfb-control-text;
  display: block;
  width: 100%;
  margin-top: @padding;
}

.rfb-RepeatingFieldset__topButton {
  .rfb-control-text;
  .btn;
  .btn-quiet;
  .btn-xxs;
  position: absolute;
  top: 7px;
  right: @padding;
}

/**
 * <ReadOnlyFieldset />
 */
.rfb-ReadOnlyFieldset {

  .rf-Field {
    .clearfix;

    & > label {
      .pull-left;
      margin: 0;
      padding: 0;
    }
    & > input[type="checkbox"] {
      .pull-right;
      padding: 0 @padding/2;
    }
    & > select {
      .pull-right;
      padding: 0 @padding/2;
      width: 50%;
      height: 15pt;
    }
  }
}
.rfb-ReadOnlyFieldset--readOnly {
  & > .rf-Field:hover {
    background: @color-hover-highlight;
  }
}
.rfb-ReadOnlyFieldset__label {
  font-size: 90%;
  margin: 0;
  padding: 0 @padding;
  display: block;
}
.rfb-ReadOnlyFieldset__field.rf-Field {
  .rfb-ReadOnlyField;
  .rf-Field__label {
    padding: 0;
    margin: 0;
    margin-right: @padding;
  }
}

/**
 * <ReadOnlyField />
 */

.rfb-ReadOnlyField {
  font-size: 95%;
  padding: @padding/2 @padding;

  &.rfb-ReadOnlyField--clickable {
    cursor: pointer;
    &:hover {
      background: @color-hover-highlight;
    }
  }
}

.rfb-ReadOnlyField__label {
  .rfb-control-text;
  display: inline-block;
  margin-right: @padding;
}

.rfb-ReadOnlyField__value,
.rfb-ReadOnlyField__noValue {
  .pull-right;
  display: inline-block;
  text-align: right;
  padding: 0 @padding/2;
}
.rfb-ReadOnlyField__noValue {
  color: @gray-lighter;
}

/**
 * <TransactionalFieldset />
 */

.rfb-TransactionalFieldset__toolbar {
  margin-top: @padding;
  padding: @padding;
}

.rfb-TransactionalFieldset__fieldset {
  padding: @padding;
}

.rfb-TransactionalFieldset__editButton {
  .btn;
  .btn-xs;
  .btn-xxs;
  .btn-quiet;
  color: #dddddd;
  position: absolute;
  top: @padding / 2;
  left: @padding / 2;
}

/**
 * <TransactionalFieldsetToolbar />
 */

.rfb-TransactionalFieldsetToolbar {
  background: @color-success;
}
.rfb-TransactionalFieldsetToolbar.rfb-TransactionalFieldsetToolbar--invalid {
  background: @color-danger;
}

.rfb-TransactionalFieldsetToolbar__save {
  .btn;
  .btn-xs;
  .btn-success;
}

.rfb-TransactionalFieldsetToolbar__cancel {
  .btn;
  .btn-xs;
  .btn-plain;
}

.rfb-TransactionalFieldsetToolbar__tip {
  color: #aaa;
  font-size: 80%;
  float: right;
  padding: @padding / 2;
}

/**
 * <RecordAutocomplete />
 */
.rfb-RecordAutocomplete {
  .rf-combobox-input {
    .form-control();
    .input-sm();
    height: 18px;
  }
  .rf-combobox-button {
    top: -1px;
  }
}

/**
 * <ChannelEditor />
 */
.rfb-ChannelEditor__actions {
  .area(0, auto, auto, 0);
  overflow: hidden;
}


/**
 * <ChannelElementList />
 */
.rfb-ChannelElementList__label,
.rfb-ChannelElementList__toolbar {
  padding: @padding;
}

.rfb-ChannelElementList__fieldsetItem {
  .rfb-LocalizedString {
    .rf-Field;
  }
}

/**
 * <ChannelElementListToolbar />
 */
.rfb-ChannelElementListToolbar {
  .clearfix;
}
.rfb-ChannelElementListToolbar__button {
  .btn;
  .btn-quiet;
  .rfb-control-text;
  .btn-xs;
  .pull-right;
}
.rfb-ChannelElementListToolbar__questionAdd {
  .pull-left;
}
.rfb-ChannelElementListToolbar__questionAddLabel {
  .rfb-control-text;
  margin-right: @padding;
}


/**
 * <LoadingScreen />
 */

.rfb-LoadingScreen {
  .area(0,0,0,0);
  z-index: 1000;
}
.rfb-LoadingScreen__text {
  display: inline-block;
  margin-left: auto;
  margin-right: auto;
  left: 0;
  right: 0;
}
.rfb-LoadingScreen__loading {
  font-size: 120%;
  .glyphicon {
    margin-right: 5px;
  }
}
.rfb-LoadingScreen__error {
  .text-danger();
}
.rfb-LoadingScreen--dark {
  background-color: rgba(0,0,0,0.5);
  color: white;
}

/**
 * <InstrumentRecordList />
 */

.rfb-InstrumentRecordList__item {
  background-color: white;
}

/**
 * <ChannelPageList />
 */

.rfb-ChannelPageList__item {
  background-color: #f8f8e0;
}

